/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 28, 2014 at 4:16:25 PM Central European Standard Time
* Operating System: Version 7.1.2 (Build 11D257)
* Image Source: /private/var/mobile/Downloads/AutoTouch
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol HTTPResponse;
#import <AutoTouch/AutoTouch-Structs.h>
@class AsyncSocket, HTTPServer, NSMutableDictionary, NSData, NSFileHandle, NSString, NSObject, FileResource, NSMutableArray, NSDictionary;

@interface HTTPConnection : NSObject {

	AsyncSocket* asyncSocket;
	HTTPServer* server;
	CFHTTPMessageRef request;
	NSMutableDictionary* params;
	int bodyReadCount;
	int bodyLength;
	NSData* remainBody;
	NSFileHandle* tmpUploadFileHandle;
	int numHeaderLines;
	NSString* requestBoundry;
	NSString* userAgent;
	NSString* nonce;
	int lastNC;
	NSObject*<HTTPResponse> httpResponse;
	FileResource* resource;
	NSMutableArray* ranges;
	NSMutableArray* ranges_headers;
	NSString* ranges_boundry;
	int rangeIndex;

}

@property (readonly) NSDictionary * params; 
@property (readonly) CFHTTPMessageRef request; 
+(void)removeRecentNonce:(id)arg1 ;
+(void)initialize;
-(void)onSocketDidDisconnect:(id)arg1 ;
-(char)onSocketWillConnect:(id)arg1 ;
-(void)onSocket:(id)arg1 willDisconnectWithError:(id)arg2 ;
-(void)onSocket:(id)arg1 didReadData:(id)arg2 withTag:(long)arg3 ;
-(void)onSocket:(id)arg1 didWriteDataWithTag:(long)arg2 ;
-(char)useDigestAccessAuthentication;
-(id)passwordForUser:(id)arg1 ;
-(id)generateNonce;
-(void)handleVersionNotSupported:(id)arg1 ;
-(void)handleUnknownMethod:(id)arg1 ;
-(char)isPasswordProtected:(id)arg1 ;
-(void)handleAuthenticationFailed;
-(id)httpResponseForURI:(id)arg1 ;
-(void)handleResponse:(id)arg1 method:(id)arg2 ;
-(void)handleResourceNotFound;
-(char)parseRangeRequest:(id)arg1 withContentLength:(unsigned long long)arg2 ;
-(CFHTTPMessageRef)prepareUniRangeResponse:(unsigned long long)arg1 ;
-(CFHTTPMessageRef)prepareMultiRangeResponse:(unsigned long long)arg1 ;
-(id)preprocessResponse:(CFHTTPMessageRef)arg1 ;
-(id)filePathForURI:(id)arg1 ;
-(id)preprocessErrorResponse:(CFHTTPMessageRef)arg1 ;
-(void)addDigestAuthChallenge:(CFHTTPMessageRef)arg1 ;
-(void)addBasicAuthChallenge:(CFHTTPMessageRef)arg1 ;
-(void)parsePostBody:(id)arg1 ;
-(void)handleMultipartHeader:(id)arg1 ;
-(void)handleMultipartBody:(id)arg1 ;
-(void)replyToHTTPRequest;
-(id)dateAsString:(id)arg1 ;
-(char)isSecureServer;
-(id)sslIdentityAndCertificates;
-(void)handleInvalidRequest:(id)arg1 ;
-(void)handleHTTPRequestBody:(id)arg1 tag:(long)arg2 ;
-(void)die;
-(id)initWithAsyncSocket:(id)arg1 forServer:(id)arg2 ;
-(void)handleServiceUnavailable;
-(void)redirectoTo:(id)arg1 ;
-(void)sendString:(id)arg1 mimeType:(id)arg2 ;
-(NSDictionary *)params;
-(id)realm;
-(char)isAuthenticated;
-(void)dealloc;
-(CFHTTPMessageRef)request;
@end

